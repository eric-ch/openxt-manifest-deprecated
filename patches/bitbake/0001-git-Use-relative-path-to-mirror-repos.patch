From d540dca6ce46213f5dd5e93fa1322b6cabb47613 Mon Sep 17 00:00:00 2001
From: Eric Chanudet <chanudete@ainfosec.com>
Date: Mon, 9 Apr 2018 16:34:06 -0400
Subject: [PATCH] git: Use relative path to mirror repos.

Uses relative path for remote and alternate configuration

This is only useful when building in a container using a file-system
binding, the absolute path in the container will likely not be valid
outside.

Signed-off-by: Eric Chanudet <chanudete@ainfosec.com>
---
 lib/bb/fetch2/git.py | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

--- a/lib/bb/fetch2/git.py
+++ b/lib/bb/fetch2/git.py
@@ -478,6 +478,12 @@ class Git(FetchMethod):
             runfetchcmd("%s clone %s %s/ %s" % (ud.basecmd, ud.cloneflags, ud.clonedir, destdir), d)
 
         repourl = self._get_repo_url(ud)
+        # Convert repourl to relative path to mirror.
+        if '://' in repourl:
+            repoabs = repourl[repourl.index('://') + 3:]
+            reporel = os.path.relpath(repoabs, destdir)
+            repourl = reporel
+
         runfetchcmd("%s remote set-url origin %s" % (ud.basecmd, repourl), d, workdir=destdir)
         if not ud.nocheckout:
             if subdir != "":
@@ -493,6 +499,19 @@ class Git(FetchMethod):
             else:
                 runfetchcmd("%s checkout %s" % (ud.basecmd, ud.revisions[ud.names[0]]), d, workdir=destdir)
 
+        # Overwrite alternate (-s) path with the equivalent relative in this OE
+        # setup. Alternate path is to/from the objects path! Also the // seems
+        # to be meaningful.
+        altrel = os.path.join('../..', os.path.relpath(ud.clonedir, destdir))
+        altfile = os.path.join(destdir, '.git/objects/info/alternates')
+        try:
+            alt = open(altfile, "w")
+            alt.write(altrel + "//objects\n")
+            alt.close()
+        except Exception as exc:
+            bb.error("Failure while bending the Fetcher behavior: %s" % (exc))
+            return False
+
         return True
 
     def clean(self, ud, d):
